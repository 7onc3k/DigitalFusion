---
// GlitchLogo.astro
---

<div class="animation-container">
  <div class="letters-container">
    <span class="letter d">D</span>
    <span class="letter f">F</span>
  </div>
  <table class="reference-table">
    <tr>
      <td></td>
      <td>i</td>
      <td>g</td>
      <td>i</td>
      <td>t</td>
      <td>a</td>
      <td>l</td>
    </tr>
    <tr>
      <td></td>
      <td></td>
      <td>u</td>
      <td>s</td>
      <td>i</td>
      <td>o</td>
      <td>n</td>
    </tr>
  </table>
</div>

<style>
  .animation-container {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
    width: 100%;
    font-size: 16px; /* Základní velikost písma pro škálování */
  }

  .reference-table {
    border-collapse: collapse;
    font-size: 1.5em;
  }

  .reference-table td {
    width: 2.5em;
    height: 2.5em;
    text-align: center;
    vertical-align: middle;
    border: 1px solid #ccc;
    font-weight: bold;
  }

  .letters-container {
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
  }

  .letter {
    font-size: 1.5em;
    font-weight: bold;
    margin: 0 0.3em;
    transition: transform 1s ease;
  }

  .d {
    color: #ff0000;
  }

  .f {
    color: #0000ff;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', (event) => {
    const container = document.querySelector('.animation-container') as HTMLElement | null;
    const d = document.querySelector('.d') as HTMLElement | null;
    const f = document.querySelector('.f') as HTMLElement | null;
    const table = document.querySelector('.reference-table') as HTMLTableElement | null;
    
    if (container && d && f && table) {
      const containerHeight = container.offsetHeight;
      const rowHeight = containerHeight / 2;
      const cellWidth = table.rows[0].cells[0].offsetWidth;
      const tableWidth = table.offsetWidth;
      
      setTimeout(() => {
        if (d && f) {
          // Vertikální animace
          d.style.transform = `translateY(-${rowHeight / 2}px)`;
          f.style.transform = `translateY(${rowHeight / 2}px)`;
          
          // Horizontální animace po 1 sekundě
          setTimeout(() => {
            const dLeftOffset = table.rows[0].cells[0].offsetLeft - container.offsetLeft;
            const fLeftOffset = table.rows[1].cells[1].offsetLeft - container.offsetLeft;
            
            d.style.transform += ` translateX(-${(tableWidth / 2) - dLeftOffset - (cellWidth / 2)}px)`;
            f.style.transform += ` translateX(-${(tableWidth / 2) - fLeftOffset - (cellWidth / 2)}px)`;
          }, 1000);
        }
      }, 100);
    }
  });
</script>
---
import type { ISourceOptions } from "@tsparticles/engine";

export interface ParticlesProps {
  id: string;
  options?: ISourceOptions;
  url?: string;
}

const { id, options, url } = Astro.props as ParticlesProps;
---

<script>
  import { tsParticles } from "@tsparticles/engine";
  import { loadSlim } from "@tsparticles/slim";

  let initialized = false;

  async function initParticles() {
    if (initialized) return;
    
    await loadSlim(tsParticles);
    
    const options = document.querySelector('#tsparticles')?.getAttribute('data-options');
    if (options) {
      await tsParticles.load({
        id: 'tsparticles',
        options: JSON.parse(options)
      });
      initialized = true;
    }
  }

  // Inicializace pouze při prvním načtení
  document.addEventListener('DOMContentLoaded', initParticles, { once: true });
</script>

<div 
  id={id}
  data-options={options ? JSON.stringify(options) : undefined}
  data-url={url}
  class="absolute inset-0"
>
</div>